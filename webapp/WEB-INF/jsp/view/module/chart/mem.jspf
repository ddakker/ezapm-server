<%@page pageEncoding="UTF-8"%>
<div id="memDivChart" style="min-width: 100%; height: 100%; margin: 0 auto">
	<div id="memChartContainer" style="height: 100%; width: 100%;"></div>
</div>
<script>
var memChartData = [];
var memDataLength = 60;
var memChartYn = "N";
var memChart01;
var memUpdateInterval = 5000;

function memPushChart(revData){
	var memDataSize = 10;

	// dataPoints & serverNames
	if(memChartYn == "N"){
		for (var i=0, size=SERVER_LIST.length; i<size; i++) {
			var data = {};
			var dataPoints = [];

			data.type = "line";
			data.xValueType = "dateTime";

			// legend Yn
			data.showInLegend = false;
			data.name = SERVER_LIST[i].serverNm;

			// console.log("serverNm : " + SERVER_LIST[i].serverNm + " recDataServerNm : " + revData.data.serverNm);

			data.dataPoints = dataPoints;
			memChartData.push(data);
		}

		memChart01 = new CanvasJS.Chart("memChartContainer",{
			//zoomEnabled: true,
			toolTip: {
				shared: true
			},
			dataPointMaxWidth: 1,
			legend: {
				verticalAlign: "top",
				horizontalAlign: "center",
	            fontSize: 8,
				fontWeight: "lighter",
				fontFamily: "calibri",
				fontColor: "dimGrey"
			},
			axisY:{
				minimum: 0,
				maximum: 100,
				viewportMaximum: 100,
				//stripLines:[{value:(80)}],
				includeZero: false
			},
			data: memChartData,
	         legend:{
	           cursor:"pointer"
	           /*, // item click event (visible)
	           itemclick : function(e) {
	             if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
	               e.dataSeries.visible = false;
	             }
	             else {
	               e.dataSeries.visible = true;
	             }
	             memChart01.render();
	           }  */
	         }
		});

		memChartYn = "Y";
	}

	var memUdatememChart = function (count) {
		count = count || 1;

		for (var i=0,size=SERVER_LIST.length; i<size; i++) {

			if (memChart01.options.data[i].name == revData.data.serverNm) {

				// log
				//if(memChart01.options.data[i].name == "WS1"){
				//	console.log("data[i].name: " + memChart01.options.data[i].name + ", revData.serverNm: " + revData.data.serverNm + "   " +  revData.data.heapUsedPercent
				//			+ "  data : " + memChart01.options.data[i].dataPoints.length + "  length : " + memDataLength + "  startTime : " + revData.data.time);
				//}

				memChart01.options.data[i].dataPoints.push({
					x: parseInt(revData.data.time),
					y: revData.data.heapUsedPercent
				});

				if ( memChart01.options.data[i].dataPoints.length > memDataLength){
					memChart01.options.data[i].dataPoints.shift();
				}

				// chart draw
				memChart01.render();
			}

		}
	};

	// generates first set of dataPoints
	memUdatememChart(memDataLength);

}

</script>